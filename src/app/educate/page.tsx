"use client"

import type React from "react"
import { useState, useEffect, useRef } from "react"
import { Navigation } from "@/components/navigation"
import { Send, Mic, GraduationCap, FileText, School, Bot, Menu, X, HelpCircle, UserCircle } from "lucide-react"
import { motion, AnimatePresence } from "framer-motion"

export default function Educate() {
  const [activeTab, setActiveTab] = useState("general")
  const [messages, setMessages] = useState<{ text: string; sender: "user" | "ai"; id: string }[]>([
    {
      text: "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ üëã ‡∏â‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô AI ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡πà‡∏≠ ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡∏™‡∏≠‡∏ö ‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡πÅ‡∏ô‡∏ß‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏≠‡∏∞‡πÑ‡∏£‡πÑ‡∏´‡∏°‡∏Ñ‡∏∞?",
      sender: "ai",
      id: "initial-message"
    },
  ])
  const [userInput, setUserInput] = useState("")
  const [isTyping, setIsTyping] = useState(false)
  const [isRecording, setIsRecording] = useState(false)
  const [isSidebarOpen, setIsSidebarOpen] = useState(false)
  const messagesEndRef = useRef<HTMLDivElement>(null)
  const [conversationHistory, setConversationHistory] = useState<Array<{ role: string; content: string }>>([])
  

  // System prompt for the AI
  const systemPrompt = `‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô AI ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡πÅ‡∏ô‡∏ß‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢
‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö:
- ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢
- ‡∏£‡∏∞‡∏ö‡∏ö TCAS ‡∏ó‡∏∏‡∏Å‡∏£‡∏≠‡∏ö
- ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ì‡∏∞‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÉ‡∏ô‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢
- ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
- ‡∏ó‡∏∏‡∏ô‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ï‡πà‡∏≤‡∏á‡πÜ

‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞:
1. ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏ò‡∏£‡∏£‡∏°
2. ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢
3. ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢
4. ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠
5. ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`
  
  // Close sidebar when window resizes to desktop size
  useEffect(() => {
    const handleResize = () => {
      if (window.innerWidth >= 768) {
        setIsSidebarOpen(false)
      }
    }

    window.addEventListener('resize', handleResize)
    return () => {
      window.removeEventListener('resize', handleResize)
    }
  }, [])

  // Scroll to bottom when messages change
  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" })
  }, [messages])

  // Close sidebar when changing tabs on mobile
  useEffect(() => {
    if (window.innerWidth < 768) {
      setIsSidebarOpen(false)
    }
  }, [activeTab])

  const callTyphoonAPI = async (userMessage: string) => {
    try {
      const apiKey = process.env.NEXT_PUBLIC_TYPHOON_API_KEY
      const url = "https://api.opentyphoon.ai/v1/chat/completions"
      
      const newHistory = [...conversationHistory, { role: "user", content: userMessage }]
      setConversationHistory(newHistory)

      const messages = [
        { role: "system", content: systemPrompt },
        ...newHistory
      ]

      const response = await fetch(url, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "Authorization": `Bearer ${apiKey}`
        },
        body: JSON.stringify({
          model: "typhoon-v2-70b-instruct",
          messages: messages,
          max_tokens: 1000,
          temperature: 0.7,
          top_p: 0.95,
          repetition_penalty: 1.05
        })
      })

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`)
      }

      const data = await response.json()
      const aiMessage = data.choices[0].message.content
      
      // Update conversation history with AI response
      setConversationHistory([...newHistory, { role: "assistant", content: aiMessage }])
      
      return aiMessage
    } catch (error) {
      console.error("Error calling Typhoon API:", error)
      return "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"
    }
  }

  // Function to generate a unique ID
  const generateId = () => {
    return Date.now().toString() + Math.random().toString(36).substring(2, 9);
  };

  const handleSendMessage = async () => {
    if (!userInput.trim()) return
  
    // Add user message with unique ID
    const userMessageId = generateId();
    setMessages((prev) => [...prev, { text: userInput, sender: "user", id: userMessageId }])
    const currentInput = userInput
    setUserInput("")
    setIsTyping(true)
  
    try {
      const aiResponse = await callTyphoonAPI(currentInput)
      setIsTyping(false) // ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° AI
      setTimeout(() => {
        // Add AI message with unique ID
        const aiMessageId = generateId();
        setMessages((prev) => [...prev, { text: aiResponse, sender: "ai", id: aiMessageId }])
      }, 100) // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô
    } catch (error) {
      console.error("Error in handleSendMessage:", error)
      setIsTyping(false)
      setMessages((prev) => [...prev, { 
        text: "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á", 
        sender: "ai", 
        id: generateId() 
      }])
    }
  }

  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key === "Enter" && !e.shiftKey) {
      e.preventDefault()
      handleSendMessage()
    }
  }

  // Speech recognition functionality
  const startSpeechRecognition = () => {
    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {
      alert('‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏£‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏á');
      return;
    }
    
    setIsRecording(true);
    
    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
    const recognition = new SpeechRecognition();
    recognition.lang = 'th-TH';
    recognition.interimResults = false;
    
    recognition.onresult = (event) => {
      const transcript = event.results[0][0].transcript;
      setUserInput(transcript);
      setIsRecording(false);
    };
    
    recognition.onend = () => {
      setIsRecording(false);
    };
    
    recognition.onerror = () => {
      setIsRecording(false);
    };
    
    recognition.start();
  };

  // Animation variants
  const messageVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: { opacity: 1, y: 0, transition: { duration: 0.3 } },
    exit: { opacity: 0, y: -10, transition: { duration: 0.2 } }
  }

  const tabVariants = {
    inactive: { backgroundColor: "#f3f4f6", color: "#374151" },
    active: { backgroundColor: "#3b82f6", color: "#ffffff" }
  }

  // Page transitions
  const pageVariants = {
    initial: { opacity: 0 },
    animate: { opacity: 1, transition: { duration: 0.3 } },
    exit: { opacity: 0, transition: { duration: 0.2 } }
  };

  // Tab definitions for reuse
  const tabs = [
    {
      id: "general",
      icon: <GraduationCap size={20} />,
      title: "‡πÅ‡∏ô‡∏∞‡πÅ‡∏ô‡∏ß‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ",
      description: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ï‡πà‡∏≠"
    },
    {
      id: "tcas",
      icon: <FileText size={20} />,
      title: "‡∏£‡∏∞‡∏ö‡∏ö TCAS",
      description: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏ó‡∏∏‡∏Å‡∏£‡∏≠‡∏ö"
    },
    {
      id: "faculty",
      icon: <School size={20} />,
      title: "‡∏Ñ‡∏ì‡∏∞/‡∏™‡∏≤‡∏Ç‡∏≤",
      description: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ì‡∏∞‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤"
    },
    {
      id: "ai-guide",
      icon: <Bot size={20} />,
      title: "‡πÅ‡∏ô‡∏∞‡πÅ‡∏ô‡∏ß‡∏Å‡∏±‡∏ö AI",
      description: "‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö AI"
    }
  ]

  return (
    <motion.main 
      className="min-h-screen flex flex-col bg-gray-50"
      initial="initial"
      animate="animate"
      exit="exit"
      variants={pageVariants}
    >
      <Navigation />

      <div className="container mx-auto px-4 py-4 sm:py-6 md:py-8 relative">
        {/* Mobile tab selector */}
        <div className="flex justify-between items-center mb-4 md:hidden">
          <h2 className="font-bold text-lg">{tabs.find(tab => tab.id === activeTab)?.title || "‡πÅ‡∏ô‡∏∞‡πÅ‡∏ô‡∏ß‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤"}</h2>
          <button 
            onClick={() => setIsSidebarOpen(!isSidebarOpen)}
            className="p-2 rounded-lg bg-white shadow-sm"
            aria-label={isSidebarOpen ? "Close menu" : "Open menu"}
          >
            {isSidebarOpen ? <X size={24} /> : <Menu size={24} />}
          </button>
        </div>

        {/* Mobile sidebar overlay */}
        {isSidebarOpen && (
          <div 
            className="fixed inset-0 bg-black/20 z-40 md:hidden"
            onClick={() => setIsSidebarOpen(false)}
          />
        )}

        {/* Mobile sidebar */}
        <div className={`fixed top-0 right-0 h-full w-3/4 max-w-xs bg-white shadow-xl z-50 transition-transform duration-300 ease-in-out transform ${isSidebarOpen ? 'translate-x-0' : 'translate-x-full'} md:hidden`}>
          <div className="flex justify-between items-center p-4 border-b">
            <h3 className="font-medium text-lg">‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠</h3>
            <button 
              onClick={() => setIsSidebarOpen(false)}
              className="p-2 rounded-full hover:bg-gray-100"
              aria-label="Close menu"
            >
              <X size={20} />
            </button>
          </div>
          <div className="p-4 space-y-3">
            {tabs.map(tab => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`w-full flex items-center space-x-3 p-3 rounded-lg text-left ${
                  activeTab === tab.id ? 'bg-primary text-white' : 'bg-gray-50 text-gray-700 hover:bg-gray-100'
                }`}
              >
                <div>{tab.icon}</div>
                <div>
                  <div className="font-medium">{tab.title}</div>
                  <div className="text-xs opacity-80">{tab.description}</div>
                </div>
              </button>
            ))}
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-4 gap-4 md:gap-6">
          {/* Desktop sidebar */}
          <div className="hidden md:block md:col-span-1">
            <div className="bg-white rounded-lg shadow-md p-4 sticky top-20">
              <h3 className="font-medium text-lg mb-4">‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠</h3>

              <div className="space-y-2">
                {tabs.map(tab => (
                  <motion.button
                    key={tab.id}
                    onClick={() => setActiveTab(tab.id)}
                    className="w-full flex items-center space-x-3 p-3 rounded-lg text-left"
                    variants={tabVariants}
                    animate={activeTab === tab.id ? "active" : "inactive"}
                    whileHover={{ scale: 1.02 }}
                    whileTap={{ scale: 0.98 }}
                  >
                    {tab.icon}
                    <div>
                      <div className="font-medium">{tab.title}</div>
                      <div className="text-xs opacity-80">{tab.description}</div>
                    </div>
                  </motion.button>
                ))}
              </div>
            </div>
          </div>

          <div className="md:col-span-3">
            <AnimatePresence mode="wait">
              {activeTab === "ai-guide" ? (
                <motion.div 
                  key="ai-guide"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  exit={{ opacity: 0 }}
                  className="bg-white rounded-lg shadow-md overflow-hidden h-[500px] md:h-[600px] flex flex-col"
                >
                  <div className="flex-1 overflow-y-auto p-3 md:p-4 bg-slate-50">
                    <AnimatePresence>
                      {messages.map((message) => (
                        <motion.div
                          key={message.id}
                          className={`flex ${message.sender === "user" ? "justify-end" : "justify-start"} mb-4`}
                          variants={messageVariants}
                          initial="hidden"
                          animate="visible"
                          exit="exit"
                        >
                          {message.sender === "ai" && (
                            <div className="w-10 h-10 rounded-full overflow-hidden bg-gradient-to-r from-blue-500 to-indigo-500 mr-2 flex-shrink-0 flex items-center justify-center">
                              <Bot size={20} className="text-white" />
                            </div>
                          )}

                          <motion.div
                            initial={{ scale: 0.95, opacity: 0 }}
                            animate={{ scale: 1, opacity: 1 }}
                            transition={{ duration: 0.2 }}
                            className={`max-w-[80%] sm:max-w-[70%] rounded-lg p-3 sm:p-4 ${
                              message.sender === "user"
                                ? "bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-sm"
                                : "bg-white text-gray-800 border border-gray-200 shadow-sm"
                            }`}
                          >
                            <p className="whitespace-pre-line text-sm sm:text-base">{message.text}</p>
                          </motion.div>

                          {message.sender === "user" && (
                            <div className="w-10 h-10 rounded-full overflow-hidden bg-gradient-to-r from-green-500 to-teal-500 ml-2 flex-shrink-0 flex items-center justify-center">
                              <UserCircle size={20} className="text-white" />
                            </div>
                          )}
                        </motion.div>
                      ))}

                      {isTyping && (
                        <motion.div 
                          className="flex justify-start mb-4"
                          initial={{ opacity: 0 }}
                          animate={{ opacity: 1 }}
                          key="typing-indicator"
                        >
                          <div className="w-10 h-10 rounded-full overflow-hidden bg-gradient-to-r from-blue-500 to-indigo-500 mr-2 flex-shrink-0 flex items-center justify-center">
                            <Bot size={20} className="text-white" />
                          </div>
                          <div className="bg-white text-gray-800 rounded-lg p-4 border border-gray-200 shadow-sm">
                            <div className="flex space-x-2">
                              <motion.div 
                                className="w-2 h-2 bg-blue-500 rounded-full"
                                animate={{ y: [0, -5, 0] }}
                                transition={{ repeat: Infinity, duration: 1 }}
                              ></motion.div>
                              <motion.div 
                                className="w-2 h-2 bg-indigo-500 rounded-full"
                                animate={{ y: [0, -5, 0] }}
                                transition={{ repeat: Infinity, duration: 1, delay: 0.2 }}
                              ></motion.div>
                              <motion.div 
                                className="w-2 h-2 bg-purple-500 rounded-full"
                                animate={{ y: [0, -5, 0] }}
                                transition={{ repeat: Infinity, duration: 1, delay: 0.4 }}
                              ></motion.div>
                            </div>
                          </div>
                        </motion.div>
                      )}

                      <div ref={messagesEndRef} />
                    </AnimatePresence>
                  </div>

                  <motion.div 
                    initial={{ y: 20, opacity: 0 }}
                    animate={{ y: 0, opacity: 1 }}
                    transition={{ delay: 0.3 }}
                    className="p-4 border-t border-gray-200 bg-white flex items-center space-x-2"
                  >
                    <motion.button 
                      className={`p-2 rounded-full ${
                        isRecording 
                          ? "bg-red-100 text-red-600" 
                          : "text-gray-500 hover:bg-indigo-50 hover:text-indigo-600"
                      } transition-colors`}
                      whileHover={{ scale: isRecording ? 1 : 1.1 }}
                      whileTap={{ scale: 0.9 }}
                      onClick={startSpeechRecognition}
                      title={isRecording ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ü‡∏±‡∏á..." : "‡∏û‡∏π‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"}
                    >
                      <Mic size={20} className={`sm:w-5 sm:h-5 ${isRecording ? "animate-pulse" : ""}`} />
                    </motion.button>
                    <input
                      type="text"
                      value={userInput}
                      onChange={(e) => setUserInput(e.target.value)}
                      onKeyDown={handleKeyDown}
                      placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì..."
                      className="flex-1 py-2 px-4 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm sm:text-base"
                    />
                    <motion.button
                      onClick={handleSendMessage}
                      whileHover={{ scale: 1.1 }}
                      whileTap={{ scale: 0.9 }}
                      className={`p-3 rounded-full ${
                        !userInput.trim() || isTyping
                          ? "bg-gray-200 text-gray-400 cursor-not-allowed"
                          : "bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-sm hover:opacity-90"
                      } transition-all`}
                      disabled={!userInput.trim() || isTyping}
                    >
                      <Send size={18} className="sm:w-5 sm:h-5" />
                    </motion.button>
                  </motion.div>
                  
                  {/* Help Section */}
                  <div className="p-4 border-t border-gray-200 bg-gray-50">
                    <div className="flex items-center text-xs text-gray-500">
                      <HelpCircle size={14} className="mr-1" />
                      <span>‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</span>
                      <div className="ml-2 flex flex-wrap gap-2">
                        <motion.button 
                          whileHover={{ scale: 1.05 }}
                          whileTap={{ scale: 0.95 }}
                          onClick={() => setUserInput("‡∏£‡∏∞‡∏ö‡∏ö TCAS ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£")}
                          className="px-2 py-1 bg-white border border-gray-200 rounded-full text-xs hover:bg-blue-50 hover:text-blue-600 hover:border-blue-100 transition-colors"
                        >
                          ‡∏£‡∏∞‡∏ö‡∏ö TCAS
                        </motion.button>
                        <motion.button 
                          whileHover={{ scale: 1.05 }}
                          whileTap={{ scale: 0.95 }}
                          onClick={() => setUserInput("‡∏Ñ‡∏ì‡∏∞‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏ä‡∏≠‡∏ö‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå")}
                          className="px-2 py-1 bg-white border border-gray-200 rounded-full text-xs hover:bg-blue-50 hover:text-blue-600 hover:border-blue-100 transition-colors"
                        >
                          ‡∏Ñ‡∏ì‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏â‡∏±‡∏ô
                        </motion.button>
                        <motion.button 
                          whileHover={{ scale: 1.05 }}
                          whileTap={{ scale: 0.95 }}
                          onClick={() => setUserInput("‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏∏‡∏ô‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏´‡∏ô‡πà‡∏≠‡∏¢")}
                          className="px-2 py-1 bg-white border border-gray-200 rounded-full text-xs hover:bg-blue-50 hover:text-blue-600 hover:border-blue-100 transition-colors"
                        >
                          ‡∏ó‡∏∏‡∏ô‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤
                        </motion.button>
                      </div>
                    </div>
                  </div>
                </motion.div>
              ) : activeTab === "general" ? (
                <motion.div 
                  key="general"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  exit={{ opacity: 0 }}
                  className="bg-white rounded-lg shadow-md p-4 sm:p-6"
                >
                  <h2 className="text-xl sm:text-2xl font-bold mb-4 sm:mb-6">‡πÅ‡∏ô‡∏∞‡πÅ‡∏ô‡∏ß‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</h2>

                  <div className="prose max-w-none">
                    <h3 className="text-lg sm:text-xl font-semibold mb-3">‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡πà‡∏≠‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢</h3>
                    <p className="mb-4 text-sm sm:text-base">
                      ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡πà‡∏≠‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏õ‡∏•‡∏≤‡∏¢ ‡∏ã‡∏∂‡πà‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏ö
                    </p>

                    <motion.div 
                      initial={{ x: -20, opacity: 0 }}
                      animate={{ x: 0, opacity: 1 }}
                      transition={{ delay: 0.2 }}
                      className="mb-6"
                    >
                      <h4 className="text-base sm:text-lg font-medium mb-2">‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß</h4>
                      <ul className="list-disc pl-6 mb-4 space-y-1 text-sm sm:text-base">
                        <li>‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏ô‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏ï‡∏ô‡πÄ‡∏≠‡∏á</li>
                        <li>‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ì‡∏∞‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à</li>
                        <li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£</li>
                        <li>‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö</li>
                        <li>‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÅ‡∏ü‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°‡∏ú‡∏•‡∏á‡∏≤‡∏ô (Portfolio)</li>
                      </ul>
                    </motion.div>

                    <motion.div 
                      initial={{ x: -20, opacity: 0 }}
                      animate={{ x: 0, opacity: 1 }}
                      transition={{ delay: 0.4 }}
                    >
                      <h4 className="text-base sm:text-lg font-medium mb-2">‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏ì‡∏∞/‡∏™‡∏≤‡∏Ç‡∏≤</h4>
                      <ul className="list-disc pl-6 mb-4 space-y-1 text-sm sm:text-base">
                        <li>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏ô‡∏±‡∏î</li>
                        <li>‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏≠‡∏≤‡∏ä‡∏µ‡∏û</li>
                        <li>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ï‡∏•‡∏≤‡∏î‡πÅ‡∏£‡∏á‡∏á‡∏≤‡∏ô</li>
                        <li>‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</li>
                        <li>‡∏ó‡∏≥‡πÄ‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô</li>
                      </ul>
                    </motion.div>
                  </div>
                </motion.div>
              ) : activeTab === "tcas" ? (
                <motion.div 
                  key="tcas"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  exit={{ opacity: 0 }}
                  className="bg-white rounded-lg shadow-md p-4 sm:p-6"
                >
                  <h2 className="text-xl sm:text-2xl font-bold mb-4 sm:mb-6">‡∏£‡∏∞‡∏ö‡∏ö TCAS</h2>

                  <div className="prose max-w-none">
                    <p className="mb-4 text-sm sm:text-base">
                      TCAS (Thai University Central Admission System) ‡∏Ñ‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏±‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÄ‡∏Ç‡πâ‡∏≤‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô‡∏≠‡∏∏‡∏î‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô 4
                      ‡∏£‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å
                    </p>

                    <div className="grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4 mb-6">
                      <motion.div 
                        className="bg-blue-50 p-3 sm:p-4 rounded-lg"
                        initial={{ y: 20, opacity: 0 }}
                        animate={{ y: 0, opacity: 1 }}
                        transition={{ delay: 0.1 }}
                        whileHover={{ y: -5, transition: { duration: 0.2 } }}
                      >
                        <h4 className="text-base sm:text-lg font-medium mb-2 text-blue-700">‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà 1: Portfolio</h4>
                        <p className="text-xs sm:text-sm">‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏à‡∏≤‡∏Å‡πÅ‡∏ü‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°‡∏ú‡∏•‡∏á‡∏≤‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡πÄ‡∏®‡∏© ‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏Ñ‡∏ß‡∏ï‡∏≤‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏Ç‡∏≠‡∏á‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢</p>
                        <div className="mt-2 text-xs text-blue-600">‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤: ‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏° - ‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°</div>
                      </motion.div>

                      <motion.div 
                        className="bg-green-50 p-3 sm:p-4 rounded-lg"
                        initial={{ y: 20, opacity: 0 }}
                        animate={{ y: 0, opacity: 1 }}
                        transition={{ delay: 0.2 }}
                        whileHover={{ y: -5, transition: { duration: 0.2 } }}
                      >
                        <h4 className="text-base sm:text-lg font-medium mb-2 text-green-700">‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà 2: Quota</h4>
                        <p className="text-xs sm:text-sm">‡πÇ‡∏Ñ‡∏ß‡∏ï‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà ‡πÇ‡∏Ñ‡∏ß‡∏ï‡∏≤‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏Ñ‡∏ß‡∏ï‡∏≤‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏ï‡∏Å‡∏•‡∏á‡∏Ç‡∏≠‡∏á‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢</p>
                        <div className="mt-2 text-xs text-green-600">‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤: ‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå - ‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô</div>
                      </motion.div>

                      <motion.div 
                        className="bg-purple-50 p-3 sm:p-4 rounded-lg"
                        initial={{ y: 20, opacity: 0 }}
                        animate={{ y: 0, opacity: 1 }}
                        transition={{ delay: 0.3 }}
                        whileHover={{ y: -5, transition: { duration: 0.2 } }}
                      >
                        <h4 className="text-base sm:text-lg font-medium mb-2 text-purple-700">‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà 3: Admission</h4>
                        <p className="text-xs sm:text-sm">‡πÉ‡∏ä‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏≠‡∏ö TGAT/TPAT ‡πÅ‡∏•‡∏∞ A-Level ‡∏ï‡∏≤‡∏°‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≥‡∏´‡∏ô‡∏î</p>
                        <div className="mt-2 text-xs text-purple-600">‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤: ‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°</div>
                      </motion.div>

                      <motion.div 
                        className="bg-orange-50 p-3 sm:p-4 rounded-lg"
                        initial={{ y: 20, opacity: 0 }}
                        animate={{ y: 0, opacity: 1 }}
                        transition={{ delay: 0.4 }}
                        whileHover={{ y: -5, transition: { duration: 0.2 } }}
                      >
                        <h4 className="text-base sm:text-lg font-medium mb-2 text-orange-700">‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà 4: Direct Admission</h4>
                        <p className="text-xs sm:text-sm">‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏á‡∏≠‡∏¥‡∏™‡∏£‡∏∞ ‡πÇ‡∏î‡∏¢‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏≠‡∏á</p>
                        <div className="mt-2 text-xs text-orange-600">‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤: ‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô</div>
                      </motion.div>
                    </div>

                    <motion.div 
                      initial={{ opacity: 0 }}
                      animate={{ opacity: 1 }}
                      transition={{ delay: 0.5 }}
                    >
                      <h3 className="text-lg sm:text-xl font-semibold mb-3">‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡∏™‡∏≠‡∏ö</h3>
                      <p className="mb-4 text-sm sm:text-base">
                        ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏ß‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡∏™‡∏≠‡∏ö TGAT/TPAT ‡πÅ‡∏•‡∏∞ A-Level ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö‡∏Å‡∏•‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏±‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà 3 Admission
                      </p>

                      <div className="bg-gray-50 p-3 sm:p-4 rounded-lg mb-4">
                        <h4 className="text-base sm:text-lg font-medium mb-2">TGAT (Thai General Aptitude Test)</h4>
                        <ul className="list-disc pl-5 sm:pl-6 space-y-1 text-sm">
                          <li>TGAT1: ‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©</li>
                          <li>TGAT2: ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•</li>
                          <li>TGAT3: ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</li>
                        </ul>
                      </div>

                      <div className="bg-gray-50 p-3 sm:p-4 rounded-lg">
                        <h4 className="text-base sm:text-lg font-medium mb-2">TPAT (Thai Professional Aptitude Test)</h4>
                        <ul className="list-disc pl-5 sm:pl-6 space-y-1 text-sm">
                          <li>TPAT1: ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏ô‡∏±‡∏î‡∏ó‡∏≤‡∏á‡πÅ‡∏û‡∏ó‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå (‡∏Å‡∏™‡∏û‡∏ó.)</li>
                          <li>TPAT2: ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏ô‡∏±‡∏î‡∏ó‡∏≤‡∏á‡∏®‡∏¥‡∏•‡∏õ‡∏Å‡∏£‡∏£‡∏°</li>
                          <li>TPAT3: ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏ô‡∏±‡∏î‡∏î‡πâ‡∏≤‡∏ô‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ ‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</li>
                          <li>TPAT4: ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏ô‡∏±‡∏î‡∏ó‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏õ‡∏±‡∏ï‡∏¢‡∏Å‡∏£‡∏£‡∏°</li>
                          <li>TPAT5: ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏ô‡∏±‡∏î‡∏Ñ‡∏£‡∏∏‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå-‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</li>
                        </ul>
                      </div>
                    </motion.div>
                  </div>
                </motion.div>
              ) : (
                <motion.div
                  key="faculty"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  exit={{ opacity: 0 }}
                  className="bg-white rounded-lg shadow-md p-4 sm:p-6"
                >
                  <h2 className="text-xl sm:text-2xl font-bold mb-4 sm:mb-6">‡∏Ñ‡∏ì‡∏∞‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤</h2>

                  <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-6">
                    <motion.div
                      className="bg-white border border-gray-200 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow"
                      initial={{ scale: 0.9, opacity: 0 }}
                      animate={{ scale: 1, opacity: 1 }}
                      transition={{ delay: 0.1 }}
                      whileHover={{ y: -5, boxShadow: "0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)" }}
                    >
                      <div className="h-32 sm:h-40 bg-gradient-to-r from-blue-500 to-purple-600 relative">
                        <div className="absolute inset-0 flex items-center justify-center text-white">
                          <School size={36} className="sm:w-12 sm:h-12" />
                        </div>
                      </div>
                      <div className="p-4">
                        <h3 className="text-lg font-semibold mb-2">‡∏Ñ‡∏ì‡∏∞‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</h3>
                        <p className="text-xs sm:text-sm text-gray-600 mb-3">‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö ‡∏û‡∏±‡∏í‡∏ô‡∏≤ ‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏≤‡∏á‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°</p>
                        <div className="text-xs text-gray-500">
                          <div className="mb-1">
                            <span className="font-medium">‡∏™‡∏≤‡∏Ç‡∏≤‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°:</span> ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå, ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤, ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡πÇ‡∏¢‡∏ò‡∏≤
                          </div>
                          <div>
                            <span className="font-medium">‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á:</span> ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£, ‡∏ô‡∏±‡∏Å‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå, ‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£
                          </div>
                        </div>
                      </div>
                    </motion.div>

                    <motion.div
                      className="bg-white border border-gray-200 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow"
                      initial={{ scale: 0.9, opacity: 0 }}
                      animate={{ scale: 1, opacity: 1 }}
                      transition={{ delay: 0.2 }}
                      whileHover={{ y: -5, boxShadow: "0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)" }}
                    >
                      <div className="h-32 sm:h-40 bg-gradient-to-r from-green-500 to-teal-600 relative">
                        <div className="absolute inset-0 flex items-center justify-center text-white">
                          <GraduationCap size={36} className="sm:w-12 sm:h-12" />
                        </div>
                      </div>
                      <div className="p-4">
                        <h3 className="text-lg font-semibold mb-2">‡∏Ñ‡∏ì‡∏∞‡πÅ‡∏û‡∏ó‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</h3>
                        <p className="text-xs sm:text-sm text-gray-600 mb-3">‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏°‡∏ô‡∏∏‡∏©‡∏¢‡πå</p>
                        <div className="text-xs text-gray-500">
                          <div className="mb-1">
                            <span className="font-medium">‡∏™‡∏≤‡∏Ç‡∏≤‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°:</span> ‡πÅ‡∏û‡∏ó‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå, ‡∏£‡∏±‡∏á‡∏™‡∏µ‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤, ‡∏ß‡∏¥‡∏™‡∏±‡∏ç‡∏ç‡∏µ‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤
                          </div>
                          <div>
                            <span className="font-medium">‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á:</span> ‡πÅ‡∏û‡∏ó‡∏¢‡πå, ‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå, ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡πÅ‡∏û‡∏ó‡∏¢‡πå
                          </div>
                        </div>
                      </div>
                    </motion.div>

                    <motion.div
                      className="bg-white border border-gray-200 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow"
                      initial={{ scale: 0.9, opacity: 0 }}
                      animate={{ scale: 1, opacity: 1 }}
                      transition={{ delay: 0.3 }}
                      whileHover={{ y: -5, boxShadow: "0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)" }}
                    >
                      <div className="h-32 sm:h-40 bg-gradient-to-r from-red-500 to-pink-600 relative">
                        <div className="absolute inset-0 flex items-center justify-center text-white">
                          <FileText size={36} className="sm:w-12 sm:h-12" />
                        </div>
                      </div>
                      <div className="p-4">
                        <h3 className="text-lg font-semibold mb-2">‡∏Ñ‡∏ì‡∏∞‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à</h3>
                        <p className="text-xs sm:text-sm text-gray-600 mb-3">‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£‡πÅ‡∏•‡∏∞‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à</p>
                        <div className="text-xs text-gray-500">
                          <div className="mb-1">
                            <span className="font-medium">‡∏™‡∏≤‡∏Ç‡∏≤‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°:</span> ‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î, ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ, ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏°‡∏ô‡∏∏‡∏©‡∏¢‡πå
                          </div>
                          <div>
                            <span className="font-medium">‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á:</span> ‡∏ô‡∏±‡∏Å‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à, ‡∏ô‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î, ‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•
                          </div>
                        </div>
                      </div>
                    </motion.div>

                    <motion.div
                      className="bg-white border border-gray-200 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow"
                      initial={{ scale: 0.9, opacity: 0 }}
                      animate={{ scale: 1, opacity: 1 }}
                      transition={{ delay: 0.4 }}
                      whileHover={{ y: -5, boxShadow: "0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)" }}
                    >
                      <div className="h-32 sm:h-40 bg-gradient-to-r from-yellow-500 to-amber-600 relative">
                        <div className="absolute inset-0 flex items-center justify-center text-white">
                          <Bot size={36} className="sm:w-12 sm:h-12" />
                        </div>
                      </div>
                      <div className="p-4">
                        <h3 className="text-lg font-semibold mb-2">‡∏Ñ‡∏ì‡∏∞‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</h3>
                        <p className="text-xs sm:text-sm text-gray-600 mb-3">‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ó‡∏§‡∏©‡∏é‡∏µ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</p>
                        <div className="text-xs text-gray-500">
                          <div className="mb-1">
                            <span className="font-medium">‡∏™‡∏≤‡∏Ç‡∏≤‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°:</span> ‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå, ‡∏ä‡∏µ‡∏ß‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤, ‡πÄ‡∏Ñ‡∏°‡∏µ
                          </div>
                          <div>
                            <span className="font-medium">‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á:</span> ‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå, ‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡∏à‡∏±‡∏¢, ‡∏ô‡∏±‡∏Å‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå
                          </div>
                        </div>
                      </div>
                    </motion.div>
                  </div>

                  <div className="mt-6 sm:mt-8">
                    <h3 className="text-lg sm:text-xl font-semibold mb-3 sm:mb-4">‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ñ‡∏ì‡∏∞‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°</h3>

                    <div className="overflow-x-auto -mx-4 sm:mx-0">
                      <div className="inline-block min-w-full align-middle px-4 sm:px-0">
                        <table className="min-w-full bg-white border border-gray-200 text-sm">
                          <thead>
                            <tr className="bg-gray-100">
                              <th className="py-2 sm:py-3 px-3 sm:px-4 text-left border-b font-medium">‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ñ‡∏ì‡∏∞</th>
                              <th className="py-2 sm:py-3 px-3 sm:px-4 text-left border-b font-medium">‡∏ß‡∏¥‡∏ä‡∏≤‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á</th>
                              <th className="py-2 sm:py-3 px-3 sm:px-4 text-left border-b font-medium">‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢</th>
                              <th className="py-2 sm:py-3 px-3 sm:px-4 text-left border-b font-medium">‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏ï‡∏•‡∏≤‡∏î‡∏á‡∏≤‡∏ô</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr className="hover:bg-gray-50">
                              <td className="py-2 sm:py-3 px-3 sm:px-4 border-b">‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</td>
                              <td className="py-2 sm:py-3 px-3 sm:px-4 border-b">TGAT, TPAT3, A-Level (‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå, ‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå)</td>
                              <td className="py-2 sm:py-3 px-3 sm:px-4 border-b">16,000 - 22,000</td>
                              <td className="py-2 sm:py-3 px-3 sm:px-4 border-b">
                                <span className="px-2 py-1 bg-green-100 text-green-800 rounded-full text-xs">‡∏™‡∏π‡∏á</span>
                              </td>
                            </tr>
                            <tr className="hover:bg-gray-50">
                              <td className="py-2 sm:py-3 px-3 sm:px-4 border-b">‡πÅ‡∏û‡∏ó‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</td>
                              <td className="py-2 sm:py-3 px-3 sm:px-4 border-b">TGAT, TPAT1, TPAT2, A-Level (‡∏ä‡∏µ‡∏ß‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤, ‡πÄ‡∏Ñ‡∏°‡∏µ, ‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå)</td>
                              <td className="py-2 sm:py-3 px-3 sm:px-4 border-b">20,000 - 25,000</td>
                              <td className="py-2 sm:py-3 px-3 sm:px-4 border-b">
                                <span className="px-2 py-1 bg-green-100 text-green-800 rounded-full text-xs">‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å</span>
                              </td>
                            </tr>
                            <tr className="hover:bg-gray-50">
                              <td className="py-2 sm:py-3 px-3 sm:px-4 border-b">‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à</td>
                              <td className="py-2 sm:py-3 px-3 sm:px-4 border-b">TGAT, A-Level (‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå, ‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)</td>
                              <td className="py-2 sm:py-3 px-3 sm:px-4 border-b">12,000 - 18,000</td>
                              <td className="py-2 sm:py-3 px-3 sm:px-4 border-b">
                                <span className="px-2 py-1 bg-green-100 text-green-800 rounded-full text-xs">‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á</span>
                              </td>
                            </tr>
                            <tr className="hover:bg-gray-50">
                              <td className="py-2 sm:py-3 px-3 sm:px-4 border-b">‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</td>
                              <td className="py-2 sm:py-3 px-3 sm:px-4 border-b">TGAT, TPAT2, A-Level (‡∏ï‡∏≤‡∏°‡∏™‡∏≤‡∏Ç‡∏≤)</td>
                              <td className="py-2 sm:py-3 px-3 sm:px-4 border-b">13,000 - 19,000</td>
                              <td className="py-2 sm:py-3 px-3 sm:px-4 border-b">
                                <span className="px-2 py-1 bg-yellow-100 text-yellow-800 rounded-full text-xs">‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡∏ñ‡∏∂‡∏á‡∏™‡∏π‡∏á</span>
                              </td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>
                </motion.div>
              )}
            </AnimatePresence>
          </div>
        </div>
      </div>
    </motion.main>
  );
}